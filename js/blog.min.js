document.addEventListener('DOMContentLoaded', function () {
    const articleListContainer = document.getElementById('article-list-container');
    const articleContentContainer = document.getElementById('article-content-container');
    const loadingIndicator = document.getElementById('article-loading-indicator');
    const errorMessage = document.getElementById('article-error-message');

    // List of article markdown files (could be fetched from a JSON file or API in a real app)
    const articles = [
        { 
            file: 'blog/articles/how-to-choose-major.md', 
            title: 'كيف تختار تخصصك الجامعي بذكاء؟ ٥ خطوات أساسية', 
            excerpt: 'اختيار التخصص الجامعي قرار محوري في حياتك. هذا المقال يقدم لك خطوات عملية لمساعدتك على اتخاذ القرار الصحيح بناءً على ميولك وقدراتك.',
            imageUrl: 'https://images.unsplash.com/photo-1522202176988-66273c2fd55f?q=80&w=800&auto=format&fit=crop',
            date: '2023-10-20',
            author: 'فريق Advisor'
        },
        { 
            file: 'blog/articles/university-life-tips.md', 
            title: 'نصائح ذهبية للتأقلم مع الحياة الجامعية بنجاح', 
            excerpt: 'الحياة الجامعية تجربة جديدة ومليئة بالتحديات والفرص. اكتشف نصائحنا لمساعدتك على التأقلم، تكوين الصداقات، وتحقيق التميز الأكاديمي.',
            imageUrl: 'https://images.unsplash.com/photo-1523050854058-8df90110c9f1?q=80&w=800&auto=format&fit=crop',
            date: '2023-10-15',
            author: 'أ. سارة المالكي'
        },
        {
            file: 'blog/articles/study-techniques.md',
            title: 'أفضل تقنيات المذاكرة الفعالة لطلاب الجامعات',
            excerpt: 'هل تعاني من صعوبة في التركيز أو تذكر المعلومات؟ تعلم أفضل تقنيات المذاكرة التي أثبتت فعاليتها لمساعدتك على تحقيق درجات أعلى.',
            imageUrl: 'https://images.unsplash.com/photo-1503676260728-1c00da094a0b?q=80&w=800&auto=format&fit=crop',
            date: '2023-10-10',
            author: 'د. محمد الجابري'
        }
        // Add more articles here
    ];

    function displayArticles() {
        if (!articleListContainer) return;
        articleListContainer.innerHTML = ''; // Clear existing
        articles.forEach(article => {
            const articleCard = `
                <div class="bg-white rounded-xl shadow-lg hover:shadow-2xl transition-shadow duration-300 overflow-hidden flex flex-col">
                    <img data-src="${article.imageUrl}" alt="${article.title}" class="lazyload w-full h-48 object-cover">
                    <div class="p-6 flex-grow flex flex-col">
                        <h2 class="text-xl font-semibold mb-2 text-primary">${article.title}</h2>
                        <p class="text-xs text-gray-500 mb-1">بقلم: ${article.author} | تاريخ النشر: ${new Date(article.date).toLocaleDateString('ar-EG')}</p>
                        <p class="text-gray-600 text-sm mb-4 flex-grow">${article.excerpt}</p>
                        <button data-article-file="${article.file}" class="read-more-btn mt-auto self-start bg-gradient-to-r from-primary to-secondary text-white font-semibold py-2 px-5 rounded-lg hover:opacity-90 transition-opacity text-sm">
                            اقرأ المزيد &larr;
                        </button>
                    </div>
                </div>
            `;
            articleListContainer.innerHTML += articleCard;
        });

        document.querySelectorAll('.read-more-btn').forEach(button => {
            button.addEventListener('click', function() {
                const articleFile = this.dataset.articleFile;
                loadArticle(articleFile);
            });
        });
    }

    async function loadArticle(filePath) {
        if (!articleListContainer || !articleContentContainer || !loadingIndicator || !errorMessage) return;

        articleListContainer.classList.add('hidden');
        errorMessage.classList.add('hidden');
        articleContentContainer.classList.add('hidden');
        articleContentContainer.innerHTML = ''; // Clear previous article
        loadingIndicator.classList.remove('hidden');

        try {
            const response = await fetch(filePath);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const markdownText = await response.text();
            
            // Manually separate YAML front matter and Markdown content
            let yamlMatter = '';
            let markdownContent = markdownText;
            const yamlEndMarker = '\n---'; // Assuming newline before second ---
            
            if (markdownText.startsWith('---')) {
                const secondMarkerIndex = markdownText.indexOf(yamlEndMarker, 3);
                if (secondMarkerIndex !== -1) {
                    yamlMatter = markdownText.substring(3, secondMarkerIndex).trim();
                    markdownContent = markdownText.substring(secondMarkerIndex + yamlEndMarker.length).trim();
                }
            }
            
            let metadata = {};
            if (yamlMatter) {
                try {
                    metadata = jsyaml.load(yamlMatter);
                } catch (e) {
                    console.warn("Could not parse YAML front matter:", e);
                    // Proceed with empty metadata or handle error
                }
            }

            const htmlContent = marked.parse(markdownContent);
            
            let articleHtml = '';
            if (metadata.title) {
                articleHtml += `<h1 class="text-3xl md:text-4xl font-bold mb-2 text-gray-800">${metadata.title}</h1>`;
            }
            if (metadata.author || metadata.date) {
                articleHtml += `<p class="text-sm text-gray-500 mb-6">`;
                if (metadata.author) articleHtml += `بقلم: ${metadata.author}`;
                if (metadata.author && metadata.date) articleHtml += ` | `;
                if (metadata.date) articleHtml += `تاريخ النشر: ${new Date(metadata.date).toLocaleDateString('ar-EG')}`;
                articleHtml += `</p>`;
            }
            if (metadata.imageUrl) {
                 articleHtml += `<img src="${metadata.imageUrl}" alt="${metadata.title || 'Article image'}" class="rounded-lg shadow-md mb-6 max-w-full h-auto mx-auto" style="max-height: 400px; object-fit: cover;">`;
            }
            
            articleHtml += htmlContent;

            // Add a back button
            articleHtml += `
                <div class="mt-10 pt-6 border-t border-gray-200">
                    <button id="back-to-list-btn" class="bg-gray-200 text-gray-700 font-semibold py-2 px-5 rounded-lg hover:bg-gray-300 transition-colors">
                        &rarr; العودة إلى قائمة المقالات
                    </button>
                </div>`;

            articleContentContainer.innerHTML = articleHtml;
            
            loadingIndicator.classList.add('hidden');
            articleContentContainer.classList.remove('hidden');

            document.getElementById('back-to-list-btn').addEventListener('click', () => {
                articleContentContainer.classList.add('hidden');
                articleContentContainer.innerHTML = '';
                articleListContainer.classList.remove('hidden');
                window.scrollTo({ top: document.querySelector('header').offsetHeight, behavior: 'smooth' });
            });
             window.scrollTo({ top: document.querySelector('header').offsetHeight, behavior: 'smooth' });


        } catch (error) {
            console.error("Error loading article:", error);
            loadingIndicator.classList.add('hidden');
            errorMessage.classList.remove('hidden');
        }
    }
    
    // Check if there's an article to load from URL (e.g., blog.html?article=article-name.md)
    const urlParams = new URLSearchParams(window.location.search);
    const articleFileFromUrl = urlParams.get('article');

    if (articleFileFromUrl) {
        // Find the full path if only filename is provided (assuming all articles are in blog/articles/)
        const articleToLoad = articles.find(art => art.file.endsWith(articleFileFromUrl));
        if (articleToLoad) {
            loadArticle(articleToLoad.file);
        } else {
            // Try loading directly if it's a full path or just show list
            const directPathAttempt = `blog/articles/${articleFileFromUrl}`; // Simple assumption
            fetch(directPathAttempt).then(res => {
                if (res.ok) loadArticle(directPathAttempt);
                else displayArticles(); // Fallback to list if direct attempt fails
            }).catch(() => displayArticles());
        }
    } else {
        displayArticles();
    }

});
