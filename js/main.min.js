/**
 * Main JavaScript for Advisor website
 * Handles general site-wide functionality and initialization.
 */

document.addEventListener('DOMContentLoaded', function() {
    // Initialize lazy loading for images if not handled by a library like lazysizes
    // This is a basic implementation, consider using Intersection Observer for better performance
    // or rely on the `loading="lazy"` attribute if browser support is sufficient.
    // For this project, we are using lazysizes.min.js, so this explicit code is not strictly necessary
    // but can be a fallback or for elements not covered by lazysizes.
    
    const lazyImages = document.querySelectorAll('img.lazyload, img[loading="lazy"], [data-src]');
    if ("IntersectionObserver" in window) {
        let lazyImageObserver = new IntersectionObserver(function(entries, observer) {
            entries.forEach(function(entry) {
                if (entry.isIntersecting) {
                    let lazyImage = entry.target;
                    if (lazyImage.dataset.src) {
                        lazyImage.src = lazyImage.dataset.src;
                    }
                    if (lazyImage.dataset.srcset) {
                        lazyImage.srcset = lazyImage.dataset.srcset;
                    }
                    lazyImage.classList.remove("lazyload"); // If using custom class
                    lazyImage.removeAttribute("data-src");
                    lazyImage.removeAttribute("data-srcset");
                    lazyImageObserver.unobserve(lazyImage);
                }
            });
        });

        lazyImages.forEach(function(lazyImage) {
            lazyImageObserver.observe(lazyImage);
        });
    } else {
        // Fallback for older browsers (less performant)
        let active = false;

        const lazyLoad = function() {
            if (active === false) {
                active = true;

                setTimeout(function() {
                    lazyImages.forEach(function(lazyImage) {
                        if ((lazyImage.getBoundingClientRect().top <= window.innerHeight && lazyImage.getBoundingClientRect().bottom >= 0) && getComputedStyle(lazyImage).display !== "none") {
                            if (lazyImage.dataset.src) {
                                lazyImage.src = lazyImage.dataset.src;
                            }
                            if (lazyImage.dataset.srcset) {
                                lazyImage.srcset = lazyImage.dataset.srcset;
                            }
                            lazyImage.classList.remove("lazyload");
                            lazyImage.removeAttribute("data-src");
                            lazyImage.removeAttribute("data-srcset");
                            // Remove from array after loading (optional)
                        }
                    });
                    active = false;
                }, 200);
            }
        };
        document.addEventListener("scroll", lazyLoad);
        window.addEventListener("resize", lazyLoad);
        window.addEventListener("orientationchange", lazyLoad);
    }


    // Quick search form submission (example, actual submission logic might differ)
    const quickSearchForm = document.querySelector('.container form'); // Simplified selector for demo
    if (quickSearchForm && quickSearchForm.querySelector('#quick-grade')) { // Check if it's the quick search form
        quickSearchForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const grade = document.getElementById('quick-grade').value;
            const interest = document.getElementById('quick-interest').value;
            alert(`بحث مقترح: معدل ${grade}, اهتمام بـ ${interest}. (هذه مجرد رسالة تجريبية)`);
            // Here you would redirect to a search results page or dynamically update content
        });
    }

    // Newsletter subscription form (example)
    const newsletterForm = document.querySelector('section.py-16.bg-white.border-t form');
    if (newsletterForm) {
        newsletterForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const emailInput = newsletterForm.querySelector('input[type="email"]');
            if (emailInput && emailInput.value) {
                alert(`شكراً لاشتراكك: ${emailInput.value} (هذه مجرد رسالة تجريبية)`);
                emailInput.value = ''; // Clear input
            } else {
                alert('يرجى إدخال بريد إلكتروني صالح.');
            }
        });
    }
    
    // Smooth scroll for anchor links (optional, if needed)
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            const hrefAttribute = this.getAttribute('href');
            // Ensure it's a valid ID selector and not just '#' or '#!'
            if (hrefAttribute && hrefAttribute.length > 1 && document.querySelector(hrefAttribute)) {
                e.preventDefault();
                document.querySelector(hrefAttribute).scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    });

    console.log("Advisor website initialized.");
});

// For minification demonstration, this file's content is duplicated from main.js but named .min.js
// In a real scenario, this would be the minified output of main.js

